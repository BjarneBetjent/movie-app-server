{"version":3,"sources":["img/spinner.svg","components/moviePreviewPoster.js","components/searchResult.js","utils/getMovies.js","components/searchPage.js","components/movie.js","App.js","index.js"],"names":["MoviePreviewPoster","setMovie","movie","imgURL","posterPath","altText","title","className","to","src","alt","onClick","SearchResult","searchResult","status","state","error","loadingImg","map","id","getMovies","a","searchString","axios","get","params","result","data","Error","SearchPage","search","setSearch","useState","setStatus","setSearchResult","useDebounce","debouncedSearch","useEffect","searchMovies","movieResult","message","length","placeholder","onChange","event","target","value","autoComplete","Movie","App","exact","path","defaults","baseURL","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc59da18.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/spinner.e30e831d.svg\";","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function MoviePreviewPoster ({setMovie, movie })\r\n{\r\n    const imgURL = `http://image.tmdb.org/t/p/w342/${movie.posterPath}`;\r\n    const altText = `Poster from the movie ${movie.title}`;\r\n    return (\r\n        <div className=\"moviePreview\">\r\n            <Link to=\"/movie\">\r\n                <img className=\"previewImage\" src={imgURL} alt={altText} onClick={() => setMovie(movie)}/>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport loadingImg from \"./../img/spinner.svg\";\r\nimport MoviePreviewPoster from \"./moviePreviewPoster\";\r\n\r\nexport default function SearchResult ({ searchResult, status, setMovie })\r\n{\r\n    const {state, error} = status;    \r\n\r\n    if (state === \"idle\")\r\n    {\r\n        return (\r\n            null\r\n        );\r\n    }\r\n    else if (state === \"pending\")\r\n    {\r\n        return (<img className=\"loadingImg centered\" src={loadingImg} alt=\"loading icon\" />)\r\n    }\r\n    else if(state === \"resolved\")\r\n    {\r\n        return (searchResult.map(movie => <MoviePreviewPoster key={movie.id} movie={movie} setMovie={setMovie}/>));\r\n    }\r\n    else if(state === \"error\")\r\n    {\r\n        return (<p className=\"centered\" id=\"error\">{error}</p>);\r\n    }\r\n}\r\n","import axios from \"axios\";\r\n\r\n/**\r\n * Makes server request with given search string\r\n * @param {*} searchString   \r\n * @returns\r\n */\r\nexport const getMovies = async (searchString = \"\") =>\r\n{\r\n    try\r\n    {\r\n        const result = await axios.get(\"/search/movie\", {\r\n            params: {\r\n                searchString\r\n            }\r\n        })\r\n        return result.data;\r\n    }\r\n    catch (error)\r\n    {      \r\n        //throw error.response.data;\r\n        throw new Error(\"Unable to find movie\");\r\n    }\r\n}","import { useState, useEffect } from \"react\";\r\nimport { useDebounce } from \"use-debounce\";\r\n\r\nimport SearchResult from \"./searchResult\";\r\nimport { getMovies } from \"../utils/getMovies\";\r\n\r\nconst SearchPage = ({ search, setSearch, setMovie }) =>\r\n{\r\n  const [status, setStatus] = useState({ state: \"idle\", error: null });\r\n  const [searchResult, setSearchResult] = useState(null);\r\n  const [debouncedSearch] = useDebounce(search, 600);\r\n\r\n\r\n  /**\r\n   * Makes server request based on the search string 600ms after the user \r\n   * stops typing. \r\n   */\r\n  useEffect(() =>\r\n  {\r\n    const searchMovies = async () =>\r\n    {\r\n      try\r\n      {\r\n        const movieResult = await getMovies(debouncedSearch);\r\n        setSearchResult(movieResult);\r\n        setStatus({ state: \"resolved\" });\r\n      }\r\n      catch (error)\r\n      {\r\n        setStatus({ state: \"error\", error: error.message });\r\n      }\r\n    }\r\n\r\n    if (debouncedSearch.length < 1) return;\r\n\r\n    searchMovies();\r\n  }, [debouncedSearch])\r\n\r\n  /**\r\n   * Move the search bar to the top if currently centered\r\n   * Sets the search state equal to input value, and clears the error state \r\n   * @param {*} event search field input element\r\n   */\r\n  const searchOnChange = (event) =>\r\n  {\r\n    setSearch(event.target.value);\r\n    if (event.target.value.length === 0) setStatus({ state: \"idle\" });\r\n    else setStatus({ state: \"pending\" });\r\n  }\r\n\r\n  return (\r\n    <div className=\"search-container\">\r\n      <div className=\"tmdb\"><p>All movie info is gathered from themoviedb.org</p></div>\r\n      <SearchResult searchResult={searchResult} status={status} setMovie={setMovie} />\r\n      <input id=\"search\" className={search === \"\" ? \"centered\" : \"search-top\"} placeholder=\"Search Movie\" onChange={searchOnChange} value={search} autoComplete=\"off\"></input>\r\n      {/* <p id=\"attribution\">This product uses the TMDb API but is not endorsed or certified by TMDb.</p> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchPage;\r\n","import React from 'react'\r\n\r\nexport default function Movie ({ movie })\r\n{\r\n    return (\r\n        <div className=\"movie\">\r\n            {movie.title}\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport SearchPage from \"./components/searchPage\";\r\nimport Movie from \"./components/movie\";\r\n\r\nconst App = () =>\r\n{\r\n    const [search, setSearch] = useState(\"\");\r\n    const [movie, setMovie] = useState(null);\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <Router>\r\n                <Switch>\r\n                    <Route exact path=\"/\"><SearchPage\r\n                        search={search}\r\n                        setSearch={setSearch}\r\n                        setMovie={setMovie}\r\n                    />\r\n                    </Route>\r\n                    <Route path=\"/movie\"><Movie movie={movie} /></Route>\r\n                </Switch>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport axios from \"axios\";\r\nimport \"./styles.css\";\r\n\r\nimport App from './App';\r\n\r\n// Only for local development\r\naxios.defaults.baseURL = \"http://localhost:5001\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}